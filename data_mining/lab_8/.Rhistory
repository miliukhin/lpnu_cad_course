nums <- read.csv("data.csv")
nums
rm(nums$n)
rm(nums$n)
?rm
ls
ls()
nums
nums[,1]
rm(nums[,1])
nums$n <- NULL
nums
?cor
nums
cor(nums$x1, nums$y)
cor(nums$x2, nums$y)
correlation <- cor(nums$x1, nums$y)
t_1 <- correlation*sqrt(12-2)/sqrt(1-correlation^2)
t_1
m_1 <- abs(correlation)*sqrt(12-1)/(1-correlation^2)
m_1
sd_y <- sd(nums$y)
sd_x <- sd(nums$x1)
a <- correlation * sd_y/sd_x
m_y <- mean(nums$y)
m_x <- mean(nums$x1)
b <- m_y - a*m_x
c <- correlation*sd_x/sd_y
d <- m_x - c*m_y
a
b
c
d
?r
r <- correlation
direct <- function (x) { a * x + b }
plot(direct)
?plot
plot(direct, -20, 20)
inverse <- function (y) { c * y + d }
plot(inverse, -20, 20)
?plot
curve(direct, -20, 20)
curve(inverse, -20, 20, add=TRUE)
curve(direct, -20, 20); curve(inverse, -20, 20, add=TRUE)
curve(direct, -20, 20); curve(inverse, -20, 20, add=TRUE)
curve(direct, -20, 20, col=2)
curve(inverse, -20, 20, col=3, add=TRUE)
plot(direct, -20, 20, col=2)
lines(inverse, -20, 20, col=3)
df <- data.frame(x=(-20:20), values=c(direct(-20:20), inverse(-20:20)), fun = rep(c("direct","inverse")))
df
library(ggplot2)
ggplot(df, aes(x, values, col = fun))+geom_line()
df <- data.frame(x=(-2:2), values=c(direct(-2:2), inverse(-2:2)), fun = rep(c("direct","inverse")))
ggplot(df, aes(x, values, col = fun))+geom_line()
df
direct(-2)
inverse(-2)
df <- data.frame(x=(-2:2), values=c(direct(-2:2), inverse(-2:2)), fun = c(rep("direct",4),rep("inverse",4))))
df <- data.frame(x=(-2:2), values=c(direct(-2:2), inverse(-2:2)), fun = c(rep("direct",4),rep("inverse",4)))
df <- data.frame(x=(-2:2), values=c(direct(-2:2), inverse(-2:2)), fun = c(rep("direct",5),rep("inverse",5)))
df
ggplot(df, aes(x, values, col = fun))+geom_line()
funcs <- list (direct, inverse)
cols <- heat.colors(5,1)
p <-ggplot()+xlim(c(1,10))+ylim(c(1,10))
for(i in 1:length(funcs))
    p <- p + stat_function(aes(y=0),fun = funcs[[i]], colour=cols[i])

print(p)
p <-ggplot()+xlim(c(-20,20))+ylim(c(-20,20))
for(i in 1:length(funcs))
    p <- p + stat_function(aes(y=0),fun = funcs[[i]], colour=cols[i])

print(p)
p <-ggplot()+xlim(c(-50,50))+ylim(c(-50,50))
for(i in 1:length(funcs))
    p <- p + stat_function(aes(y=0),fun = funcs[[i]], colour=cols[i])

print(p)
tan <- (1-r^2)/r * sd_x*sd_y/(sd_x^2+sd_y^2)
tan
tan <- (1-r^2) * sd_x*sd_y/(sd_x^2+sd_y^2)/r
tan
tan <- (1-r^2)/r * sd_x*sd_y/(sd_x^2+sd_y^2)
tan
p <-ggplot()+xlim(c(-500,500))+ylim(c(-500,500))
for(i in 1:length(funcs))
    p <- p + stat_function(aes(y=0),fun = funcs[[i]], colour=cols[i])

print(p)
r
correlation
r
atan(0.05359102)
atan(0.049)
atan(0.05359102)
tan(0.05359102)
atan(0.05359102)
?atan
atan(tan)
0.0535398*180/pi
print(p)
p <-ggplot()+xlim(c(-50,50))+ylim(c(-50,50))
for(i in 1:length(funcs))
    p <- p + stat_function(aes(y=0),fun = funcs[[i]], colour=cols[i])

print(p)
inverse <- function (x) { (x-d)/c }

p <-ggplot()+xlim(c(-50,50))+ylim(c(-50,50))
for(i in 1:length(funcs))
    p <- p + stat_function(aes(y=0),fun = funcs[[i]], colour=cols[i])

print(p)
prst (direct, inverse)INT(P)
funcs <- list (direct, inverse)
inverse
cols <- heat.colors(5,1)
p <-ggplot()+xlim(c(-50,50))+ylim(c(-50,50))
for(i in 1:length(funcs))
    p <- p + stat_function(aes(y=0),fun = funcs[[i]], colour=cols[i])

print(p)
print(p)
print(p)
p <-ggplot()+xlim(c(-50,50))+ylim(c(-50,50))
for(i in 1:length(funcs))
    p <- p + stat_function(aes(y=0),fun = funcs[[i]], colour=cols[i])

print(p)
p <-ggplot()+xlim(c(-50,50))+ylim(c(-50,50))
for(i in 1:length(funcs))
    p <- p + stat_function(aes(y=0),fun = funcs[[i]], colour=cols[i])

print(p)
print(p)
p <-ggplot()+xlim(c(-50,50))+ylim(c(0,200))
for(i in 1:length(funcs))
    p <- p + stat_function(aes(y=0),fun = funcs[[i]], colour=cols[i])

print(p)
p <-ggplot()+xlim(c(-70,70))+ylim(c(0,200))
for(i in 1:length(funcs))
    p <- p + stat_function(aes(y=0),fun = funcs[[i]], colour=cols[i])

print(p)
p <-ggplot()+xlim(c(-70,70))+ylim(c(0,250))
for(i in 1:length(funcs))
    p <- p + stat_function(aes(y=0),fun = funcs[[i]], colour=cols[i])

print(p)
